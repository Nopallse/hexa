name: CI - Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:
  quality-checks:
    name: Code Quality & Build Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          fe/package-lock.json
          be/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd fe
        npm ci

    - name: Install backend dependencies
      run: |
        cd be
        npm ci

    - name: Lint frontend code
      run: |
        cd fe
        npm run lint || echo "No lint script found, skipping..."
      continue-on-error: true

    - name: Build frontend
      run: |
        cd fe
        npm run build

    - name: Check frontend build artifacts
      run: |
        cd fe
        if [ -d "dist" ]; then
          echo "✅ Frontend build successful - dist folder created"
          ls -la dist/
        else
          echo "❌ Frontend build failed - no dist folder found"
          exit 1
        fi

    - name: Check backend syntax
      run: |
        cd be
        node -c src/server.js && echo "✅ Backend syntax check passed" || (echo "❌ Backend syntax error" && exit 1)

    # Optional: Add database migration check
    # - name: Check database migrations
    #   run: |
    #     cd be
    #     npx prisma generate
    #     npx prisma validate

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Audit frontend dependencies
      run: |
        cd fe
        npm audit --audit-level=high || echo "⚠️ Security vulnerabilities found in frontend"
      continue-on-error: true

    - name: Audit backend dependencies
      run: |
        cd be
        npm audit --audit-level=high || echo "⚠️ Security vulnerabilities found in backend"
      continue-on-error: true

  validate-env:
    name: Environment Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check required environment files
      run: |
        echo "🔍 Checking environment configuration..."
        
        # Check if env.example exists in backend
        if [ -f "be/env.example" ]; then
          echo "✅ Backend env.example found"
          echo "📝 Required backend environment variables:"
          cat be/env.example
        else
          echo "⚠️ Backend env.example not found"
        fi

    - name: Validate package.json files
      run: |
        echo "🔍 Validating package.json files..."
        
        # Validate frontend package.json
        cd fe
        if node -e "require('./package.json')"; then
          echo "✅ Frontend package.json is valid"
        else
          echo "❌ Frontend package.json is invalid"
          exit 1
        fi
        
        # Validate backend package.json
        cd ../be
        if node -e "require('./package.json')"; then
          echo "✅ Backend package.json is valid"
        else
          echo "❌ Backend package.json is invalid"
          exit 1
        fi