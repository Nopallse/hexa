import{aa as l,al as f,r as m}from"./index-CZFAEO2y.js";class d{cache=null;cacheTimestamp=0;CACHE_DURATION=300*1e3;async getExchangeRates(){try{return(await l.get("/rates")).data.data}catch(e){throw console.error("Error fetching exchange rates:",e),e}}async getCachedExchangeRates(){const e=Date.now();if(this.cache&&e-this.cacheTimestamp<this.CACHE_DURATION)return this.cache;const r=await this.getExchangeRates();return this.cache=r,this.cacheTimestamp=e,r}async convertCurrency(e,r,t){try{return(await l.post("/rates/convert",{amount:e,from_currency:r,to_currency:t})).data.data.converted_amount}catch(n){throw console.error("Error converting currency:",n),n}}async areRatesFresh(){try{return(await l.get("/rates/fresh")).data.data.is_fresh}catch(e){return console.error("Error checking rates freshness:",e),!1}}clearCache(){this.cache=null,this.cacheTimestamp=0}}const g=new d;class p{supportedCurrencies={IDR:{name:"Indonesian Rupiah",symbol:"Rp",decimal:0},USD:{name:"US Dollar",symbol:"$",decimal:2},EUR:{name:"Euro",symbol:"€",decimal:2},MYR:{name:"Malaysian Ringgit",symbol:"RM",decimal:2},SGD:{name:"Singapore Dollar",symbol:"S$",decimal:2},HKD:{name:"Hong Kong Dollar",symbol:"HK$",decimal:2},AED:{name:"UAE Dirham",symbol:"د.إ",decimal:2}};formatCurrency(e,r="IDR"){const t=this.supportedCurrencies[r];if(!t)return`${e.toFixed(2)} ${r}`;const{symbol:n,decimal:c}=t,i=e.toLocaleString("en-US",{minimumFractionDigits:c,maximumFractionDigits:c});return`${n} ${i}`}convertAmount(e,r,t,n){if(r===t)return e;if(r==="USD"){const s=n[t];return s?e*s.rate:e}if(t==="USD"){const s=n[r];return s?e/s.rate:e}const c=n[r],i=n[t];return!c||!i?e:e/c.rate*i.rate}roundToCurrency(e,r="IDR"){const t=this.supportedCurrencies[r],n=t?t.decimal:2;return Math.round(e*Math.pow(10,n))/Math.pow(10,n)}calculatePriceRange(e,r,t){if(!e||e.length===0)return null;const n=e.map(c=>{const i=this.convertAmount(parseFloat(String(c.price)),c.currency_code||"IDR",r,t);return this.roundToCurrency(i,r)});return{min:Math.min(...n),max:Math.max(...n),formatted_min:this.formatCurrency(Math.min(...n),r),formatted_max:this.formatCurrency(Math.max(...n),r)}}formatPriceRange(e,r="IDR"){return e?e.min===e.max?this.formatCurrency(e.min,r):`${this.formatCurrency(e.min,r)} - ${this.formatCurrency(e.max,r)}`:""}getCurrencyInfo(e){return this.supportedCurrencies[e]||null}getAllSupportedCurrencies(){return this.supportedCurrencies}}const u=new p;function y(){const[o,e]=m.useState(null),[r,t]=m.useState(!0),[n,c]=m.useState(null);return m.useEffect(()=>{(async()=>{try{t(!0),c(null);const a=await g.getCachedExchangeRates();e(a.rates)}catch(a){console.error("Error fetching exchange rates:",a),c(a instanceof Error?a.message:"Failed to fetch exchange rates")}finally{t(!1)}})()},[]),{exchangeRates:o,loading:r,error:n}}function x(){const{exchangeRates:o,loading:e,error:r}=y(),{currency:t}=f(),n=(a,s="IDR")=>{if(!o)return a;const h=u.convertAmount(a,s,t,o);return u.roundToCurrency(h,t)};return{convertPrice:n,formatPrice:(a,s="IDR")=>{const h=n(a,s);return u.formatCurrency(h,t)},formatPriceRange:a=>{if(!o)return"";const s=u.calculatePriceRange(a,t,o);return u.formatPriceRange(s,t)},exchangeRates:o,currentCurrency:t,loading:e,error:r}}export{x as u};
